[{"/Users/henrikullen/Sites/React/notes/src/index.js":"1","/Users/henrikullen/Sites/React/notes/src/App.js":"2","/Users/henrikullen/Sites/React/notes/src/utils/noteHelpers.js":"3","/Users/henrikullen/Sites/React/notes/src/components/list.js":"4","/Users/henrikullen/Sites/React/notes/src/components/editor.js":"5","/Users/henrikullen/Sites/React/notes/src/components/Editor.js":"6","/Users/henrikullen/Sites/React/notes/src/components/List.js":"7","/Users/henrikullen/Sites/React/notes/src/components/Form.js":"8"},{"size":198,"mtime":1606978866143,"results":"9","hashOfConfig":"10"},{"size":1663,"mtime":1608205458810,"results":"11","hashOfConfig":"10"},{"size":1259,"mtime":1608204947355,"results":"12","hashOfConfig":"10"},{"size":621,"mtime":1607343495010,"results":"13","hashOfConfig":"10"},{"size":728,"mtime":1607344169135,"results":"14","hashOfConfig":"10"},{"size":550,"mtime":1607854913610,"results":"15","hashOfConfig":"10"},{"size":565,"mtime":1608204015071,"results":"16","hashOfConfig":"10"},{"size":2848,"mtime":1607854927019,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"k6dbnr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/henrikullen/Sites/React/notes/src/index.js",[],["37","38"],"/Users/henrikullen/Sites/React/notes/src/App.js",[],"/Users/henrikullen/Sites/React/notes/src/utils/noteHelpers.js",["39"],"function initializeNotes() {\n\t\n\tlocalStorage.setItem('notes', JSON.stringify([]))\n\t\n\treturn []\n}\n\nexport function createNote(title, body) {\n\tconst notes = getNotes()\n\tconst note = {\n\t\tid: Date.now(),\n\t\ttitle,\n\t\tbody\n\t}\n\tnotes.unshift(note)\n\tconsole.log('about to save', notes)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n\nexport function getNote(id) {\n\tconst notes = getNotes()\n\treturn notes.find((note) => note.id === id)\n}\n\nexport function getNotes() {\n\tconst notes = localStorage.getItem('notes')\n\tif (!notes) {\n\t\tnotes = initializeNotes()\n\t}\n\tconst parsedNotes = JSON.parse(notes)\n\treturn parsedNotes\n}\n\nexport function updateNote(id, title, body) {\n\tconst notes = getNotes()\n\tconst indexToUpdate = notes.findIndex((note) => note.id === id)\n\tconst note = {\n\t\tid,\n\t\ttitle,\n\t\tbody\n\t}\n\tnotes.splice(indexToUpdate, 1)\n\tnotes.splice(0, 0, note)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\nexport function deleteNote(id) {\n\tconst notes = getNotes()\n\tconst indexToDelete = notes.findIndex((note) => note.id === id)\n\tif (indexToDelete >= 0) notes.splice(indexToDelete, 1)\n\tconst jsonNoteArray = JSON.stringify(notes)\n\tlocalStorage.setItem('notes', jsonNoteArray)\n}\n","/Users/henrikullen/Sites/React/notes/src/components/list.js",["40","41","42"],"/Users/henrikullen/Sites/React/notes/src/components/editor.js",["43"],"/Users/henrikullen/Sites/React/notes/src/components/Editor.js",[],"/Users/henrikullen/Sites/React/notes/src/components/List.js",[],"/Users/henrikullen/Sites/React/notes/src/components/Form.js",["44","45"],"import React, {useState, useEffect} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {createNote, getNotes, updateNote, deleteNote} from '../utils/noteHelpers'\n\n/*\nRequired\n1. (DONE) write text in fields and store it as a new note\n2. (DONE) click on a note and display text in the fields\n3. (DONE) edit the field w/ text from a selected note and save it\n4. (DONE) clicking save while on a selected note will update the selected note\n\t-- how to we make <List /> rerender when clicking Save?\n5. Delete selected note\n*/\n\nconst STATUS_INITIAL_VALUE = ''\n\nexport default function InputForm({selectedNote, refreshList, setSelectedNote}) {\n  console.log(selectedNote)\n  const [title, setTitle] = useState(STATUS_INITIAL_VALUE)\n  const [body, setBody] = useState(STATUS_INITIAL_VALUE)\n  const [status, setStatus] = useState(STATUS_INITIAL_VALUE)\n  const [variant, setVariant] = useState(STATUS_INITIAL_VALUE)\n\n  useEffect(() => {\n    setTimeout(() => setStatus(STATUS_INITIAL_VALUE), 2000)\n  }, [status])\n\n  useEffect(() => {\n    if (selectedNote) return setTitle(selectedNote.title)\n    setTitle(STATUS_INITIAL_VALUE)\n  }, [selectedNote])\n\n  useEffect(() => {\n    if (selectedNote) return setBody(selectedNote.body)\n    setBody(STATUS_INITIAL_VALUE)\n  }, [selectedNote])\n\n  useEffect(() => {\n    if (selectedNote) return setVariant('')\n  }, [variant])\n\n  const onChangeTitle = (e) => setTitle(e.target.value)\n  const onChangeBody = (e) => setBody(e.target.value)\n\n  const onSave = (e) => {\n    e.preventDefault()\n    setTitle(STATUS_INITIAL_VALUE)\n    setStatus('The note is saved')\n    setVariant('success')\n    setTitle('')\n    setBody('')\n    if (selectedNote) {\n      updateNote(selectedNote.id, title, body)\n      return refreshList()\n    }\n\n    createNote(title, body)\n    refreshList()\n  }\n\n  const onDelete = (e) => {\n    e.preventDefault()\n    const {id} = selectedNote\n    deleteNote(id)\n    refreshList()\n    setTitle(STATUS_INITIAL_VALUE)\n    setBody(STATUS_INITIAL_VALUE)\n    setStatus('The note is deleted')\n    setVariant('danger')\n  }\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Label>Title</Form.Label>\n        <Form.Control className=\"mb-3\" value={title} onChange={onChangeTitle} />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Note</Form.Label>\n        <Form.Control className=\"mb-9\"  value={body} onChange={onChangeBody} />\n      </Form.Group>\n      <Button onClick={onSave} className=\"mr-2\" variant=\"success\">\n        Save\n      </Button>\n      {selectedNote && (\n        <Button onClick={onDelete} className=\"mr-2\" variant=\"danger\">\n          Delete\n        </Button>\n      )}\n      {status && (\n        <Alert className=\"mt-3\" variant={variant}>\n          {status}\n        </Alert>\n      )}\n    </Form>\n  )\n}\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":29,"column":3,"nodeType":"52","messageId":"53","endLine":29,"endColumn":8},{"ruleId":"54","severity":1,"message":"55","line":1,"column":16,"nodeType":"52","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"57","severity":2,"message":"58","line":6,"column":43,"nodeType":"52","messageId":"59","endLine":6,"endColumn":50},{"ruleId":"57","severity":2,"message":"60","line":15,"column":51,"nodeType":"52","messageId":"59","endLine":15,"endColumn":62},{"ruleId":null,"fatal":true,"severity":2,"message":"61","line":6,"column":3},{"ruleId":"54","severity":1,"message":"62","line":5,"column":21,"nodeType":"52","messageId":"56","endLine":5,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":42,"column":6,"nodeType":"65","endLine":42,"endColumn":15,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-const-assign","'notes' is constant.","Identifier","const","no-unused-vars","'useState' is defined but never used.","unusedVar","no-undef","'useSate' is not defined.","undef","'slectedNote' is not defined.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m    \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m  )\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m\u001b[0m","'getNotes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedNote'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [selectedNote, variant]",{"range":"72","text":"73"},[1431,1440],"[selectedNote, variant]"]